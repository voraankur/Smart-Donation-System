/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DonorRole;

import Business.Enterprise.Enterprise;
import Business.Organization.DonorOrganization;
import Business.Organization.Organization;
import Business.Organization.RecipientOrganization;
import Business.People.Donor;
import Business.People.Person;
import Business.People.Recipient;
import Business.Requirement.Requirement;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ankur
 */
public class NearbyRequirementsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DonorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private ArrayList<Recipient> tempRecList;
    
    /**
     * Creates new form NearbyRequirementsJPanel
     */
    public NearbyRequirementsJPanel(JPanel userProcessContainer, UserAccount account, DonorOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        tempRecList= new ArrayList<>();
        populateNeedyTable();
    }
    
    private void populateNeedyTable(){
        Donor donor=(Donor)userAccount.getEmployee();
        String donorZipcode=donor.getZipcode();
        
        Organization org=null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                       if (organization instanceof RecipientOrganization) {
                           org = organization;   
                       }
        }
        for (Person person: org.getPersonDirectory().getPersonList() ){
           Recipient recipient = (Recipient) person;
           if (donorZipcode.equals(recipient.getZipcode())){
               tempRecList.add(recipient);
           }
        }
        /*
        if(tempRecList.isEmpty()){
            
            JOptionPane.showMessageDialog(null, "There is no nearby requirements");
            return;
        }*/
        
        DefaultTableModel dtm = (DefaultTableModel) NeedyJTable.getModel();
        dtm.setRowCount(0);
        
        for(Recipient recipient: tempRecList){
            Object[] row= new Object[3];
            row[0]= recipient;
            row[1]= recipient.getStreetName();
            row[2]= recipient.getPhoneNumber();
            dtm.addRow(row);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        NeedyJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnShowNeeds = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        requirementsJtable = new javax.swing.JTable();
        btnAssignToMe = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        NeedyJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Address", "Phone Number"
            }
        ));
        jScrollPane1.setViewportView(NeedyJTable);

        jLabel1.setText("List of nearby needy people");

        btnShowNeeds.setText("Show needs");
        btnShowNeeds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowNeedsActionPerformed(evt);
            }
        });

        requirementsJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Requirement", "Description", "Status"
            }
        ));
        jScrollPane2.setViewportView(requirementsJtable);

        btnAssignToMe.setText("I would like to help");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });

        btnBack.setText("<<  Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("Nearby Needs");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack)
                            .addComponent(btnAssignToMe)
                            .addComponent(btnShowNeeds)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnShowNeeds)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAssignToMe)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowNeedsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowNeedsActionPerformed
        int selectedRow = NeedyJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        DefaultTableModel dtm = (DefaultTableModel) requirementsJtable.getModel();
        dtm.setRowCount(0);
       
        Recipient recipient = (Recipient)NeedyJTable.getValueAt(selectedRow,0);
        
        if(recipient.getRequirementList().getRequirementList().isEmpty()){
            JOptionPane.showMessageDialog(null, "There are no requirements for selected person");
            return;
        }
        
        for(Requirement requirement: recipient.getRequirementList().getRequirementList()){
            Object[] row= new Object[3];
            row[0] = requirement;
            row[1] = requirement.getRequirementDesc();
            row[2] = requirement.getStatus();
            dtm.addRow(row);
        }
    }//GEN-LAST:event_btnShowNeedsActionPerformed

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed
        int selectedRow = requirementsJtable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        Requirement requirement= (Requirement)requirementsJtable.getValueAt(selectedRow, 0);
        
        if(requirement.getStatus().equals("Supported")){
            JOptionPane.showMessageDialog(null, "This requirement is already supported");
            return;
        }
        
        requirement.setStatus("Supported");
        requirement.setDonor((Donor)userAccount.getEmployee());
        populateNeedyTable();
        
        JOptionPane.showMessageDialog(null, "Thank you for your help. Best Wishes!!");
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable NeedyJTable;
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnShowNeeds;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable requirementsJtable;
    // End of variables declaration//GEN-END:variables
}
