/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DonorRole;

import Business.Enterprise.Enterprise;
import Business.Organization.DonorOrganization;
import Business.People.Donor;
import Business.Product.Product;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ankur
 */
public class ViewDonationHistoryJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private DonorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    /**
     * Creates new form DonateClothesJPanel
     */
    public ViewDonationHistoryJPanel(JPanel userProcessContainer, UserAccount account, DonorOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        Donor donor = (Donor)userAccount.getEmployee();
        populateDonationHistoryTable();
    }

    private void populateDonationHistoryTable(){
        DefaultTableModel dtm = (DefaultTableModel) donationHistoryJTable.getModel();
        dtm.setRowCount(0);
        Donor donor = (Donor)userAccount.getEmployee();
        
        for (Product product: donor.getDonationList().getProductList() ){
            /*if(product.getProductStatus().equals("Rejected")){
                return;
            }*/
            
            Object[] row= new Object[5];
            row[0]= product.getProductID();
            row[1]= product;
            row[2]= product.getProductType();
            row[3]= product.getIsDonated();
            row[4]= product.getDonationDate();
            //order.getSalesPerson().setCommission(order.calculateCommission(orderItem) * orderItem.getQuantity());
            dtm.addRow(row);
        }
        
        /*
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = request.getProduct().getProductID();
            row[1] = request.getProduct();
            row[2] = request.getProduct().getProductType();
            row[3] = request.getStatus();
            row[4] = request.getRequestDate();
            dtm.addRow(row);
        }*/
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        donationHistoryJTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        reCipientNameTxt = new javax.swing.JLabel();
        btnGetRecName = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        donationHistoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tracking ID", "Donated Item", "Item Type", "Donated?", "Donation Date"
            }
        ));
        jScrollPane1.setViewportView(donationHistoryJTable);
        if (donationHistoryJTable.getColumnModel().getColumnCount() > 0) {
            donationHistoryJTable.getColumnModel().getColumn(0).setMinWidth(100);
            donationHistoryJTable.getColumnModel().getColumn(1).setMinWidth(100);
            donationHistoryJTable.getColumnModel().getColumn(2).setMinWidth(100);
            donationHistoryJTable.getColumnModel().getColumn(3).setMinWidth(100);
            donationHistoryJTable.getColumnModel().getColumn(4).setMinWidth(200);
        }

        btnBack.setText("<<  Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnGetRecName.setText("Get Recipient's Name");
        btnGetRecName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetRecNameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("Donation History");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(btnBack)
                                .addGap(139, 139, 139)
                                .addComponent(reCipientNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(btnGetRecName)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reCipientNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnGetRecName))
                .addContainerGap(145, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnGetRecNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetRecNameActionPerformed
        int selectedRow = donationHistoryJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        Product product= (Product) donationHistoryJTable.getValueAt(selectedRow, 1);
        
        if(product.getIsDonated().equals("Yes") ){
            
        //Product product=(Product) donationHistoryJTable.getValueAt(selectedRow,1);
        
        reCipientNameTxt.setText(product.getRecipient().getName());
        
        }
        else{
            JOptionPane.showMessageDialog(null, "This item has not donated yet");
        }
    }//GEN-LAST:event_btnGetRecNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGetRecName;
    private javax.swing.JTable donationHistoryJTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel reCipientNameTxt;
    // End of variables declaration//GEN-END:variables
}
